#Eclipse messages class for SigComposite
SigComposite_grpSignatureGeneration=Signaturerzeugung
SigComposite_grpSignedDoc=Signiertes Dokument
SigComposite_title=SigVisualisierung
SigComposite_description=\r\nDie Visualisierung soll die Erzeugung einer Signatur für ein bestimmtes Dokument zeigen. Eine digitale Signatur kann zur Authentisierung der Identität des Senders oder des Unterzeichners des Dokuments genutzt werden. Sie sichert außerdem die Integrität des Dokumentes selbst.
SigComposite_lblHeader=Signaturvisualisierung
SigComposite_lblHash=
SigComposite_lblSignature=
SigComposite_lblProgress=Schritt %s von 4
#The TabFolder
SigComposite_tbtmNewItem_0=Schritt 1
SigComposite_tbtmNewItem_1=Schritt 2
SigComposite_tbtmNewItem_2=Schritt 3
SigComposite_tbtmNewItem_3=Schritt 4
SigComposite_txtDescriptionOfStep1=\r\nInput auswählen\r\n\r\nSie können auswählen, was Sie signieren möchten: Entweder öffenen Sie eine bereits vorhandene Datei oder geben Sie selbst einen Text ein. Um den Signaturerstellungsprozess zu starten, klicken Sie den Button "Input auswählen" und folgen Sie den Anweisungen.
SigComposite_txtDescriptionOfStep2=\r\nHashfunktion auswählen\r\n\r\nEine Hashfunktion ist ein Algorithmus oder eine Subroutine, die einen Datensatz variabler Länge auf einen Datensatz fixer Länge abbildet. Da die Größe des Hashwertes einer Datei normalerweise viel kleiner ist als die Datei selbst, wird direkt der Hashwert signiert. Dadurch wird die Effizienz des Signaturerzeugungsprozesses gesteigert. Bei der Signaturerstellung sowie bei der Verifikation der Signatur muss der gleich Hashalgorithmus verwendet werden.
SigComposite_txtDescriptionOfStep3=\r\nSignaturfunktion auswählen\r\n\r\nUm den von Ihnen gewählten Input zu signieren, können Sie zwischen verschieden Signaturfunktionen auswählen. Einige Signaturverfahren basieren auf asymmetrischer Verschlüsselung, wie RSA, andere Verfahren wurden eigens für diesen Zweck entwickelt, wie DSA. Um eine Signatur zu erstellen und anschließend zu prüfen, benötigt man zwei verschiedene Schlüssel. Der private Schlüssel wird für die Erstellung der Signatur genutzt. Nur der Besitzer des Schlüssels kennt ihn und muss ihn geheim halten. Der öffentliche Schlüssel kann von jedem verwendet werden, um die Signatur zu verifizieren.
SigComposite_txtDescriptionOfStep4=\r\nUm die erzeugte Signatur anzuzeigen, klicken Sie auf den Button \u201EErzeugte Signatur anzeigen\u201C. Dort finden Sie alle relevanten Informationen zu der erzeugten Signatur - der Besitzer, Informationen über den Schlüssel und der gewählten Signaturfunktion. Außerdem ist es möglich, zwischen verschiedenen Darstellungsmöglichkeiten zu wählen. 
SigComposite_txtDescriptionOfStep4_Success=\r\nDie Signatur wurde erfolgreich erzeugt!\r\n
SigComposite_txtSignature=Signatur
#Buttons
SigComposite_btnHash=Hashfunktion
SigComposite_btnSignature=Signaturfunktion
SigComposite_btnChooseInput=Input auswählen
SigComposite_btnOpenInEditor=Erzeugte Signatur anzeigen
SigComposite_btnReset=Reset
SigComposite_btnReturn=Zurück zu JCT-PKI
SigComposite_menu=Alles auswählen

SigComposite_MessageTitle=Signatur
SigComposite_MessageTitleRetunr=Information
SigComposite_MessageTextReturn=Klicken Sie auf "Zurück zu JCT-PKI" um zurückzukehren und dort fortzufahren
#Mouseover Texts

Visual.name.0=Signaturerzeugung
view.name.0=Signaturerzeugung
